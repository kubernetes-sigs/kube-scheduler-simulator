// Code generated by MockGen. DO NOT EDIT.
// Source: simulator/resourceapplier/resourceapplier.go
//
// Generated by this command:
//
//	mockgen -source=simulator/resourceapplier/resourceapplier.go -destination=simulator/replayer/mock_resourceapplier/resourceapplier.go
//

// Package mock_resourceapplier is a generated GoMock package.
package mock_resourceapplier

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// MockResourceApplier is a mock of ResourceApplier interface.
type MockResourceApplier struct {
	ctrl     *gomock.Controller
	recorder *MockResourceApplierMockRecorder
	isgomock struct{}
}

// MockResourceApplierMockRecorder is the mock recorder for MockResourceApplier.
type MockResourceApplierMockRecorder struct {
	mock *MockResourceApplier
}

// NewMockResourceApplier creates a new mock instance.
func NewMockResourceApplier(ctrl *gomock.Controller) *MockResourceApplier {
	mock := &MockResourceApplier{ctrl: ctrl}
	mock.recorder = &MockResourceApplierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceApplier) EXPECT() *MockResourceApplierMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockResourceApplier) Create(ctx context.Context, resource *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, resource)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockResourceApplierMockRecorder) Create(ctx, resource any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockResourceApplier)(nil).Create), ctx, resource)
}

// Delete mocks base method.
func (m *MockResourceApplier) Delete(ctx context.Context, resource *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, resource)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockResourceApplierMockRecorder) Delete(ctx, resource any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockResourceApplier)(nil).Delete), ctx, resource)
}

// Update mocks base method.
func (m *MockResourceApplier) Update(ctx context.Context, resource *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, resource)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockResourceApplierMockRecorder) Update(ctx, resource any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockResourceApplier)(nil).Update), ctx, resource)
}

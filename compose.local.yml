# Note for maintainers: When making a change in this file,
# you're likely to make the same change in simulator/docs/sample/plugin-extender/docker-compose.yaml.
services:
  # This container copies the data,
  # so any changes made to the configuration files within the Pod will not affect the original files.
  init-container: {}
  simulator-scheduler:
    image: simulator-scheduler
  simulator-server:
    image: simulator-server
    depends_on:
      fake-source-cluster:
        condition: "service_healthy"
        required: false
  simulator-frontend:
    image: simulator-frontend
  simulator-cluster: {}
  fake-source-cluster:
    image: registry.k8s.io/kwok/cluster:v0.6.0-k8s.v1.30.2
    container_name: fake-source-cluster
    restart: always
    healthcheck:
      test: "kwokctl kubectl get nodes"
      start_period: 60s
      start_interval: 1s
      interval: 600s
    ports:
      - "3132:3132"
    environment:
      - KWOK_KUBE_APISERVER_PORT=3132
    networks:
      - simulator-internal-network
    profiles:
      - externalImportEnabled

  scenario-controller:
    image: scenario-controller
    profiles: ["scenario"]
    command:
      - "--kubeconfig=/config/kubeconfig.yaml"
      - "--webhook-cert-path=/tmp/k8s-webhook-server/serving-certs"
    volumes:
      - ./simulator/cmd/scheduler/kubeconfig.yaml:/config/kubeconfig.yaml:ro
      - scenario-webhook-certs:/tmp/k8s-webhook-server/serving-certs:ro
    ports:
      - "9443:9443"
    depends_on:
      bootstrap:
        condition: service_healthy
    networks:
      - simulator-internal-network

  # Bootstrap container: prepares CRDs and generates webhook certificates
  bootstrap:
    image: bootstrap
    profiles: ["scenario"]
    depends_on:
      - simulator-cluster
    volumes:
      - ./simulator/cmd/scheduler/kubeconfig.yaml:/config/kubeconfig.yaml:ro
      - ./scenario/config/webhook:/tmp/webhook:ro
      - ./scenario/config/crd:/manifests/crd:ro
      - scenario-webhook-certs:/manifests/webhook/certs
      - scenario-webhook-work:/manifests/webhook
    networks:
      - simulator-internal-network
    healthcheck:
      test: ["CMD", "sh", "-c", "test -f /manifests/webhook/certs/tls.crt"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

networks:
  simulator-internal-network:
    driver: bridge
volumes:
  simulator-etcd-data:
  scenario-webhook-certs:
  scenario-webhook-work:
  conf:
